
@using System.Web.UI.WebControls
@model MVCSmartClient01.Models.draftDetailForm

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "gridTrayDraftDetail4Rek";
    settings.Settings.ShowGroupPanel = false;
    settings.Settings.ShowGroupedColumns = false;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CallbackRouteValues = new { Controller = "TrxNotificationHeader", Action = "_TrayDraftDetail4Rek", IdNotification = ViewData["IdNotification"] };
    settings.Width = Unit.Percentage(100);

    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });
    settings.Columns.Add(column =>
    {
        column.SetHeaderTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                Html.ActionLink("New", "_AddEditTDraftContainer", new { IdNotification = -1 }).ToHtmlString()
            );
        });
        column.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<table><tr><td>" +
                Html.ActionLink("Kirim", "_SendNotiDetail", new { @class = "updateLink", IdNotificationDetail = DataBinder.Eval(c.DataItem, "IdNotificationDetail")},
                    new { onclick = "return confirm('Notifikasi akan langsung dikirim ?')" }) + "&nbsp;" +
                "</td><td>" +
                Html.ActionLink("Edit", "_AddEditTDraftContainer", new { @class = "deleteLink", IdNotification = DataBinder.Eval(c.DataItem, "IdNotification"), FlgTraySent = false }) + "&nbsp;" +
                "</td><td>" +
                Html.ActionLink("Hapus", "_DeleteNotiDetail", new { @class = "deleteLink", IdNotificationDetail = DataBinder.Eval(c.DataItem, "IdNotificationDetail")},
                    new { onclick = "return confirm('Apakah Anda yakin akan menghapus data ini ?')" })
                + "</td></tr></table>"
            );
        });
        column.Width = 70;
    });

    settings.KeyFieldName = "IdNotificationDetail";
    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        column.HeaderStyle.Font.Bold = true;
        column.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };
    settings.Columns.Add(column =>
    {
        column.FieldName = "CaptionInfo";
        column.Caption = "Judul Notifikasi";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "IdTipeNotification";
        column.Caption = "Tipe Notifikasi";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Width = 150;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "IdLevelUrgensi";
        column.Caption = "Tingkat Urgensi";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = (DevExpress.Web.ASPxEditors.ComboBoxProperties)column.PropertiesEdit;
        comboBoxProperties.ClientSideEvents.Init = "function(s, e) {s.InsertItem(0, '(ALL)', '');}";
        comboBoxProperties.DataSource = Model.LevelUrgensiColls;
        comboBoxProperties.TextField = "RefDescription";
        comboBoxProperties.ValueField = "RefId";
        comboBoxProperties.ValueType = typeof(int);
        column.Width = 150;
    });

}).Bind(Model.DraftDetailColls).GetHtml()
