@model MVCSmartClient01.Models.trxManagementForm

@{
    Html.EnableClientValidation();
}

<link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/SmartApps.js"></script>
<script type="text/javascript">
    function OnFilesUploadComplete(s, e) {
        var imageBaseName = '@Model.ImageBaseName';
    }

    function buttonEdit1_ButtonClick(s, e) {
        window.open('../Content/DocumentImages/XYZ123456789_KTP.jpg'.replace('XYZ123456789', '@Model.ImageBaseName'), 'KTP', 'toolbar=no, left=100,top=25,location=no, directories=no, status=no, menubar=no, width=700, height=700');
        return false;
        src = '../Content/DocumentImages/XYZ123456789_KTP.jpg'.replace('XYZ123456789', '@Model.ImageBaseName'); height = '42'; width = '42';
    }

</script>
<div id="legend" style="margin-bottom:-10px">
    @*<legend style="font-size:medium" class="">Management</legend>*@
    <legend style="font-size:medium" class="">@ViewBag.JudulForm</legend>
</div>


<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    #fileInputNPWP { width:0; height:0; } 
    #fileInputKTP { width:0; height:0; } 
    #fileInputIAPI { width:0; height:0; } 

    /* The Close Button */
</style>


@using (Html.BeginForm("_AddEditManagement", "TrxDataOrganisasi", FormMethod.Post))
{
    @Html.HiddenFor(model => model.IdManagemen)
    @Html.HiddenFor(model => model.ImageBaseName)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedUser)
    
    @Html.HiddenFor(model => model.FileExtNPWP, new { id = "id4FileExtNPWP" })
    @Html.HiddenFor(model => model.FileExtKTP, new { id = "id4FileExtKTP" })
    @Html.HiddenFor(model => model.FileExtIAPI, new { id = "id4FileExtIAPI" })
    @*@Html.HiddenFor(model => model.FileExtCV, new { id = "id4FileExtCV" })*@

    <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nama Lengkap";
                settings.AssociatedControlName = "Name";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Name";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
          ).Bind(Model.Name).GetHtml()
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Handphone 1";
                settings.AssociatedControlName = "Handphone1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Handphone1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
          ).Bind(Model.Handphone1).GetHtml()
                @Html.ValidationMessageFor(model => model.Handphone1, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Jabatan";
                settings.AssociatedControlName = "RoleTitle";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "RoleTitle";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
          ).Bind(Model.RoleTitle).GetHtml()
                @Html.ValidationMessageFor(model => model.RoleTitle, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Handphone 2";
                settings.AssociatedControlName = "Handphone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Handphone2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
   ).Bind(Model.Handphone2).GetHtml()
                @Html.ValidationMessageFor(model => model.Handphone2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Alamat";
                settings.AssociatedControlName = "Alamat";
            }
        ).GetHtml()
                @Html.DevExpress().Memo(
            settings =>
            {
                settings.Name = "Alamat";
                settings.ControlStyle.CssClass = "editor";
                //settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Height = 60;
                settings.Width = 250;
            }
           ).Bind(Model.Alamat).GetHtml()
                @Html.ValidationMessageFor(model => model.Alamat, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 1";
                settings.AssociatedControlName = "Telephone1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                //settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
            ).Bind(Model.Phone1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone1_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
            ).Bind(Model.Phone1_2).GetHtml()


                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Telephone1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
           ).Bind(Model.Telephone1).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Telephone1, null, new { @class = "validator" })
                <div class="clearfix"></div>
                <br/>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 2";
                settings.AssociatedControlName = "Telephone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-3 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone2_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone2_2).GetHtml()


                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Telephone2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
    ).Bind(Model.Telephone2).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Telephone2, null, new { @class = "validator" })

            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nomor KTP";
                settings.AssociatedControlName = "NomorKTP";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorKTP";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
           ).Bind(Model.NomorKTP).GetHtml()
            @Html.ValidationMessageFor(model => model.NomorKTP, null, new { @class = "validator" })
            <br />
            <div class="clearfix"></div>
            @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "";
                settings.AssociatedControlName = "NomorKTP11";
            }
            ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputKTP' name='file' />
                    <button id='btnUploadKTP' class="fa fa-upload" data-toggle="tooltip" title="Upload KTP !"></button>
                </div>
                <div id="MyDivKTP" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivKTP" onclick="DisplayMe1(this)">File yang diupload</a>
                </div>
                <div id="MyDelKTP" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelKTP" onclick="RemoveMeLocal1(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayKTP">
                    <!-- The Modal -->
                    <div id="MyModal1" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe1()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_KTP" + @Model.FileExtKTP + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>

            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 3";
                settings.AssociatedControlName = "Telephone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone3_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 nopadding";
            }
            ).Bind(Model.Phone3_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone3_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone3_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone3_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Telephone3, null, new { @class = "validator" })
                <br/>
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Email 1";
                settings.AssociatedControlName = "Email1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Email1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Format Email tidak valid !";
            }
           ).Bind(Model.Email1).GetHtml()
                @Html.ValidationMessageFor(model => model.Email1, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tanggal Lahir";
                settings.AssociatedControlName = "TanggalLahir";
            }
        ).GetHtml()

                @Html.DevExpress().DateEdit(
            settings =>
            {
                settings.Name = "TanggalLahir";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.TanggalLahir).GetHtml()
                @Html.ValidationMessageFor(model => model.TanggalLahir, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Email 2";
                settings.AssociatedControlName = "Email2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Email2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Format Email tidak valid !";
            }
    ).Bind(Model.Email2).GetHtml()
                @Html.ValidationMessageFor(model => model.Email2, null, new { @class = "validator" })

            </div>
            <div class="clearfix"></div>

            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "NPWP";
                settings.AssociatedControlName = "NomorNPWP";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorNPWP";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
           ).Bind(Model.NomorNPWP).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorNPWP, null, new { @class = "validator" })
                <br />
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "";
                settings.AssociatedControlName = "NomorNPWP11";
            }
                ).GetHtml()

            <div class="col-xs-1 nopadding">
                <input type='file' id='fileInputNPWP' name='file' />
                <button id='btnUploadNPWP' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen NPWP !"></button>
            </div>
            <div id="MyDivNPWP" class="col-xs-5 nopadding">
                <a href="javascript:void(0);" id="MyDivNPWP" onclick="DisplayMe2(this)">File yang diupload</a>
            </div>
            <div id="MyDelNPWP" class="col-xs-1 nopadding">
                <a href="javascript:void(0);" id="MyDelNPWP" onclick="RemoveMeLocal2(this)">X</a>
            </div>
            <div class="clearfix"></div>

            <div id="DisplayNPWP">
                <!-- The Modal -->
                <div id="MyModal2" class="modal">
                    <div class="modal-content">
                        <span class="close" onclick="CloseMe2()" style=padding:0px;>&times;</span>
                        <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_NPWP" + @Model.FileExtNPWP + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                    </div>
                </div>
            </div>
            <div id="progressbar_container" style="width: 100%; height: 30px; position: relative; background-color: grey; display: none">
                <div id="progressbar" style="width: 0%; height: 100%; position: absolute; background-color: green"></div>
                <span id="progressbar_label" style="position: absolute; left: 35%; top: 20%">Uploading...</span>
            </div>
            <div class="clearfix"></div>
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fax 1";
                settings.AssociatedControlName = "Fax1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                //settings.Properties.MaskSettings.Mask = "9999";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                //settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
     ).Bind(Model.Fax1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax1_11";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
     ).Bind(Model.Fax1_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Fax1, null, new { @class = "validator" })
                <div class="clearfix"></div>
                <br/>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fax 2";
                settings.AssociatedControlName = "Fax2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax2_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax2_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Fax2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>

            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Dokumen CV";
                settings.AssociatedControlName = "NomorIAPI11";
            }
                ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputIAPI' name='file' />
                    <button id='btnUploadIAPI' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen CV !"></button>
                </div>
                <div id="MyDivIAPI" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivIAPI" onclick="DisplayMe3(this)">File yang diupload</a>
                </div>
                <div id="MyDelIAPI" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelIAPI" onclick="RemoveMeLocal3(this)">X</a>
                </div>
                <div class="clearfix"></div>

                <div id="DisplayIAPI">
                    <!-- The Modal -->
                    <div id="MyModal3" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe3()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_IAPI" + @Model.FileExtIAPI + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>
                <div id="progressbar_container" style="width: 100%; height: 30px; position: relative; background-color: grey; display: none">
                    <div id="progressbar" style="width: 0%; height: 100%; position: absolute; background-color: green"></div>
                    <span id="progressbar_label" style="position: absolute; left: 35%; top: 20%">Uploading...</span>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().CheckBox(
            settings =>
            {
                settings.Name = "IsTTDLaporan";
                settings.Text = "Berhak menandatangani laporan";
                if (Model.IdTypeOfRekanan == 3)
                {
                    settings.ClientVisible = true;
                }
                else
                {
                    settings.ClientVisible = false;
                }
            }
            ).Bind(Model.IsTTDLaporan).GetHtml()
                @Html.ValidationMessageFor(model => model.IsTTDLaporan, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>

            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                <button type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnUpdate').click();">
                    <span class="glyphicon glyphicon-ok"></span>&nbsp;Simpan
                </button>
                <button type="button" class="btn btn-danger dropdown-toggle" onclick="$('#btnCancel').click();">
                    <span class="glyphicon glyphicon-remove"></span>&nbsp;Batal
                </button>
            </div>

</form>
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnUpdate";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Update";
                settings.UseSubmitBehavior = true;
                settings.ClientVisible = false;
            }
        ).GetHtml()
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxDataOrganisasi", Action = "GetByRekanan" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
    </div>
}

<script>

    $(function () {

        if ($('#id4FileExtNPWP').val() == '') {
            document.getElementById("MyDivNPWP").style.display = "none";
            document.getElementById("MyDelNPWP").style.display = "none";
            var $el = $('#fileInput');
            $el.val('');
        }

        if ($('#id4FileExtKTP').val() == '') {
            document.getElementById("MyDivKTP").style.display = "none";
            document.getElementById("MyDelKTP").style.display = "none";
            var $el = $('#fileInput');
            $el.val('');
        }

        if ($('#id4FileExtIAPI').val() == '') {
            document.getElementById("MyDivIAPI").style.display = "none";
            document.getElementById("MyDelIAPI").style.display = "none";
            var $el = $('#fileInput');
            $el.val('');
        }

        //if ($('#id4FileExtCV').val() == '') {
        //    document.getElementById("MyDivCV").style.display = "none";
        //    document.getElementById("MyDelCV").style.display = "none";
        //    var $el = $('#fileInput');
        //    $el.val('');
        //}

        $('#btnUploadNPWP').click(function (e) {
            e.preventDefault();
            $('#fileInputNPWP').click();
        }
        );

        $('#btnUploadKTP').click(function (e) {
            e.preventDefault();
            $('#fileInputKTP').click();
        }
        );

        $('#btnUploadIAPI').click(function (e) {
            e.preventDefault();
            $('#fileInputIAPI').click();
        }
        );

        //$('#btnUploadCV').click(function (e) {
        //    e.preventDefault();
        //    $('#fileInputCV').click();
        //}
        //);
    });
    ///ini yang digunakan
    $('#fileInputKTP').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtKTP').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_KTP', 'MyDivKTP', 'MyDelKTP', '1');
    });

    $('#fileInputNPWP').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtNPWP').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_NPWP', 'MyDivNPWP', 'MyDelNPWP', '2');
    });

    $('#fileInputIAPI').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtIAPI').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_IAPI', 'MyDivIAPI', 'MyDelIAPI', '3');
    });

    @*$('#fileInputCV').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtCV').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_CV', 'MyDivCV', 'MyDelCV', '4');
    });*@

    function RemoveMeLocal1(elm) {
        $('#id4FileExtKTP').val('');
        RemoveMe(elm, 'MyDivKTP');
    }

    function RemoveMeLocal2(elm) {
        $('#id4FileExtNPWP').val('');
        RemoveMe(elm, 'MyDivNPWP');
    }

    function RemoveMeLocal3(elm) {
        $('#id4FileExtIAPI').val('');
        RemoveMe(elm, 'MyDivIAPI');
    }

    //function RemoveMeLocal4(elm) {
    //    $('#id4FileExtCV').val('');
    //    RemoveMe(elm, 'MyDivCV');
    //}

    var myModal1 = document.getElementById('MyModal1');
    var myModal2 = document.getElementById('MyModal2');
    var myModal3 = document.getElementById('MyModal3');
    //var myModal4 = document.getElementById('MyModal4');

</script>
