@model MVCSmartClient01.Models.trxManagementForm

@{
    Html.EnableClientValidation();
}

<link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/SmartApps.js"></script>
<script type="text/javascript">
    function OnFilesUploadComplete(s, e) {
        var imageBaseName = '@Model.ImageBaseName';
    }

    function buttonEdit1_ButtonClick(s, e) {
        window.open('../Content/DocumentImages/XYZ123456789_KTP.jpg'.replace('XYZ123456789', '@Model.ImageBaseName'), 'KTP', 'toolbar=no, left=100,top=25,location=no, directories=no, status=no, menubar=no, width=700, height=700');
        return false;
        src = '../Content/DocumentImages/XYZ123456789_KTP.jpg'.replace('XYZ123456789', '@Model.ImageBaseName'); height = '42'; width = '42';
    }
</script>
<div id="legend" style="margin-bottom:-10px">
    <legend style="font-size:medium" class="">Management</legend>
</div>

<style>
    #fileInputAtt1 {
        width: 0;
        height: 0;
    }

    #fileInputAtt2 {
        width: 0;
        height: 0;
    }

    #fileInputAtt3 {
        width: 0;
        height: 0;
    }

    #fileInputAtt4 {
        width: 0;
        height: 0;
    }
    #fileInputAtt5 {
        width: 0;
        height: 0;
    }
</style>

@using (Html.BeginForm("_AddEditManagement", "TrxDataOrganisasi", FormMethod.Post))
{
    @Html.HiddenFor(model => model.IdManagemen)
    @Html.HiddenFor(model => model.ImageBaseName)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedUser)

    @Html.HiddenFor(model => model.FileExtKTP, new { id = "id4FileExtAtt1" })
    @Html.HiddenFor(model => model.FileExtNPWP, new { id = "id4FileExtAtt2" })
    @Html.HiddenFor(model => model.FileExtIAPI, new { id = "id4FileExtAtt3" })
    @Html.HiddenFor(model => model.FileExtCV, new { id = "id4FileExtAtt4" })
    @Html.HiddenFor(model => model.FileExtIzin, new { id = "id4FileExtAtt5" })

   <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nama Lengkap";
                settings.AssociatedControlName = "Name";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Name";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
          ).Bind(Model.Name).GetHtml()
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nomor Ijin Penilai";
                settings.AssociatedControlName = "NomorIjinPenilai";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorIjinPenilai";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
   ).Bind(Model.NomorIjinPenilai).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorIjinPenilai, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Jabatan";
                settings.AssociatedControlName = "RoleTitle";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "RoleTitle";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
          ).Bind(Model.RoleTitle).GetHtml()
                @Html.ValidationMessageFor(model => model.RoleTitle, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Asal Kantor Cabang";
                settings.AssociatedControlName = "AsalKantorCabang";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "AsalKantorCabang";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.AsalKantorCabang).GetHtml()
                @Html.ValidationMessageFor(model => model.AsalKantorCabang, null, new { @class = "validator" })            
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Alamat";
                settings.AssociatedControlName = "Alamat";
            }
        ).GetHtml()
                @Html.DevExpress().Memo(
            settings =>
            {
                settings.Name = "Alamat";
                settings.ControlStyle.CssClass = "editor";
                //settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Height = 60;
                settings.Width = 250;
            }
           ).Bind(Model.Alamat).GetHtml()
                @Html.ValidationMessageFor(model => model.Alamat, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Handphone 2";
                settings.AssociatedControlName = "Handphone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Handphone2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
   ).Bind(Model.Handphone2).GetHtml()
                @Html.ValidationMessageFor(model => model.Handphone2, null, new { @class = "validator" })
                <br/>
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Handphone 1";
                settings.AssociatedControlName = "Handphone1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Handphone1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
          ).Bind(Model.Handphone1).GetHtml()
                @Html.ValidationMessageFor(model => model.Handphone1, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nomor KTP";
                settings.AssociatedControlName = "NomorKTP";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorKTP";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
           ).Bind(Model.NomorKTP).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorKTP, null, new { @class = "validator" })
                <br />
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "";
                settings.AssociatedControlName = "NomorKTP11";
            }
                ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputAtt1' name='file' style='display: none'/>
                    <button id='btnUploadAtt1' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen !"></button>
                </div>
                <div id="MyDivAtt1" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivAtt1" onclick="DisplayMe1(this)">File yang diupload</a>
                </div>
                <div id="MyDelAtt1" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelAtt1" onclick="RemoveMeLocal1(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayAtt1">
                    <!-- The Modal -->
                    <div id="MyModal1" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe1()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Att1" + @Model.FileExtKTP + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>

            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 1";
                settings.AssociatedControlName = "Telephone1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                //settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
            ).Bind(Model.Phone1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone1_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
            ).Bind(Model.Phone1_2).GetHtml()


                @*@Html.DevExpress().TextBox(
             settings =>
             {
                 settings.Name = "Telephone1";
                 settings.ControlStyle.CssClass = "editor";
                 settings.Width = 250;
             }
            ).Bind(Model.Telephone1).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Telephone1, null, new { @class = "validator" })
                <div class="clearfix"></div>
                <br />
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 2";
                settings.AssociatedControlName = "Telephone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-3 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone2_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone2_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Telephone2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>

            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tanggal Lahir";
                settings.AssociatedControlName = "TanggalLahir";
            }
        ).GetHtml()

                @Html.DevExpress().DateEdit(
            settings =>
            {
                settings.Name = "TanggalLahir";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.TanggalLahir).GetHtml()
                @Html.ValidationMessageFor(model => model.TanggalLahir, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 3";
                settings.AssociatedControlName = "Telephone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone3_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone3_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone3_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone3_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone3_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Telephone3, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "NPWP";
                settings.AssociatedControlName = "NomorNPWP";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorNPWP";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
           ).Bind(Model.NomorNPWP).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorNPWP, null, new { @class = "validator" })
                <br />
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "";
                settings.AssociatedControlName = "NomorNPWP11";
            }
                ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputAtt2' name='file' style='display: none'/>
                    <button id='btnUploadAtt2' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen !"></button>
                </div>
                <div id="MyDivAtt2" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivAtt2" onclick="DisplayMe2(this)">File yang diupload</a>
                </div>
                <div id="MyDelAtt2" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelAtt2" onclick="RemoveMeLocal2(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayAtt2">
                    <!-- The Modal -->
                    <div id="MyModal2" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe2()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Att2" + @Model.FileExtNPWP + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>

            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Email 1";
                settings.AssociatedControlName = "Email1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Email1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Format Email tidak valid !";
            }
           ).Bind(Model.Email1).GetHtml()
                @Html.ValidationMessageFor(model => model.Email1, null, new { @class = "validator" })
                <br/>        
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Email 2";
                settings.AssociatedControlName = "Email2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {   
                settings.Name = "Email2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Format Email tidak valid !";
            }
    ).Bind(Model.Email2).GetHtml()
                @Html.ValidationMessageFor(model => model.Email2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">

                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Name = "NomorIAPIXX";
                //sesuai jenis rekanan KJPP atau KAP 
                if (Model.IdTypeOfRekanan == 1)
                {
                    settings.Text = "Nomor MAPPI";
                }
                else
                {
                    settings.Text = "Nomor IAPI";
                }
                settings.AssociatedControlName = "NomorIAPI";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorIAPI";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
           ).Bind(Model.NomorIAPI).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorIAPI, null, new { @class = "validator" })
                <br />
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.Name = "NomorIAPI11X";
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "";
                settings.AssociatedControlName = "NomorIAPI11";
                //settings.ClientVisible = (Model.IdTypeOfRekanan == 1 || Model.IdTypeOfRekanan == 2);
            }
                ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputAtt3' name='file' style='display: none'/>
                    <button id='btnUploadAtt3' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen !"></button>
                </div>
                <div id="MyDivAtt3" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivAtt3" onclick="DisplayMe3(this)">File yang diupload</a>
                </div>
                <div id="MyDelAtt3" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelAtt3" onclick="RemoveMeLocal3(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayAtt3">
                    <!-- The Modal -->
                    <div id="MyModal3" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe3()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Att3" + @Model.FileExtIAPI + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>

            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fax 1";
                settings.AssociatedControlName = "Fax1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
            }
     ).Bind(Model.Fax1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax1_11";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
     ).Bind(Model.Fax1_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Fax1, null, new { @class = "validator" })
                <br />
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fax 2";
                settings.AssociatedControlName = "Fax2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax2_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax2_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Fax2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                if (Model.IdTypeOfRekanan == 1)
                {
                    settings.Text = "Akhir Berlaku MAPPI";
                }
                else
                {
                    settings.Text = "Akhir Berlaku IAPI";
                }
                settings.AssociatedControlName = "NomorIAPI";
                settings.AssociatedControlName = "AkhirBerlakuIAPI";
            }
        ).GetHtml()
                @Html.DevExpress().DateEdit(
            settings =>
            {
                settings.Name = "AkhirBerlakuIAPI";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
   ).Bind(Model.AkhirBerlakuIAPI).GetHtml()
                @Html.ValidationMessageFor(model => model.AkhirBerlakuIAPI, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Izin Penilai Publik";
                settings.AssociatedControlName = "NomorIzin11";
            }
                ).GetHtml()
                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputAtt5' name='file' style='display: none' />
                    <button id='btnUploadAtt5' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen Izin Penilai Publik !"></button>
                </div>
                <div id="MyDivAtt5" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivAtt5" onclick="DisplayMe5(this)">File yang diupload</a>
                </div>
                <div id="MyDelAtt5" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelAtt5" onclick="RemoveMeLocal5(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayAtt5">
                    <!-- The Modal -->
                    <div id="MyModal5" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe5()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Att5" + @Model.FileExtIzin + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Dokumen CV";
                settings.AssociatedControlName = "NomorCV11";
            }
                ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputAtt4' name='file' style='display: none' />
                    <button id='btnUploadAtt4' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen CV !"></button>
                </div>
                <div id="MyDivAtt4" class="col-xs-5 nopadding">
                    <a href="javascript:void(0);" id="MyDivAtt4" onclick="DisplayMe4(this)">File yang diupload</a>
                </div>
                <div id="MyDelAtt4" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelAtt4" onclick="RemoveMeLocal4(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayAtt4">
                    <!-- The Modal -->
                    <div id="MyModal4" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe4()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Att4" + @Model.FileExtCV + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
            </div>
            <div class="clearfix"></div>


            <div class="form-group col-xs-10 col-sm-5 col-md-5 col-lg-5">
                <button type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnUpdate').click();">
                    <span class="glyphicon glyphicon-ok"></span>&nbsp;Simpan
                </button>
                <button type="button" class="btn btn-danger dropdown-toggle" onclick="$('#btnCancel').click();">
                    <span class="glyphicon glyphicon-remove"></span>&nbsp;Batal
                </button>
            </div>

</form>
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnUpdate";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Update";
                settings.UseSubmitBehavior = true;
                settings.ClientVisible = false;
            }
        ).GetHtml()
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxDataOrganisasi", Action = "GetByRekanan" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
    </div>
 }


<script>

    $(function () {

        if ($('#id4FileExtAtt1').val() == '') {
            document.getElementById("MyDivAtt1").style.display = "none";
            document.getElementById("MyDelAtt1").style.display = "none";
            var $el = $('#fileInput');
            $el.val('');
        }
        if ($('#id4FileExtAtt2').val() == '') {
            document.getElementById("MyDivAtt2").style.display = "none";
            document.getElementById("MyDelAtt2").style.display = "none";
            var $el = $('#fileInput');
            $el.val('');
        }
        if ($('#id4FileExtAtt3').val() == '') {
            document.getElementById("MyDivAtt3").style.display = "none";
            document.getElementById("MyDelAtt3").style.display = "none";
            var $el = $('#fileInput');
            $el.val('');
        }
        if ($('#id4FileExtAtt4').val() == '') {
            document.getElementById("MyDivAtt4").style.display = "none";
            document.getElementById("MyDelAtt4").style.display = "none";
            var $el = $('#fileInput4');
            $el.val('');
        }
        if ($('#id4FileExtAtt5').val() == '') {
            document.getElementById("MyDivAtt5").style.display = "none";
            document.getElementById("MyDelAtt5").style.display = "none";
            var $el = $('#fileInput5');
            $el.val('');
        }

        $('#btnUploadAtt1').click(function (e) {
            e.preventDefault();
            $('#fileInputAtt1').click();
        }
        );
        $('#btnUploadAtt2').click(function (e) {
            e.preventDefault();
            $('#fileInputAtt2').click();
        }
        );
        $('#btnUploadAtt3').click(function (e) {
            e.preventDefault();
            $('#fileInputAtt3').click();
        }
        );
        $('#btnUploadAtt4').click(function (e) {
            e.preventDefault();
            $('#fileInputAtt4').click();
        }
        );
        $('#btnUploadAtt5').click(function (e) {
            e.preventDefault();
            $('#fileInputAtt5').click();
        }
        );
    });
    ///ini yang digunakan
    $('#fileInputAtt1').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt1').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Att1', 'MyDivAtt1', 'MyDelAtt1', 1);
    });
    $('#fileInputAtt2').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt2').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Att2', 'MyDivAtt2', 'MyDelAtt2', 2);
    });
    $('#fileInputAtt3').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt3').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Att3', 'MyDivAtt3', 'MyDelAtt3', 3);
    });
    $('#fileInputAtt4').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt4').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Att4', 'MyDivAtt4', 'MyDelAtt4', 4);
    });
    $('#fileInputAtt5').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt5').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Att5', 'MyDivAtt5', 'MyDelAtt5', 5);
    });

    function RemoveMeLocal1(elm) {
        $('#id4FileExtAtt1').val('');
        RemoveMe(elm, 'MyDivAtt1');
    }
    function RemoveMeLocal2(elm) {
        $('#id4FileExtAtt2').val('');
        RemoveMe(elm, 'MyDivAtt2');
    }
    function RemoveMeLocal3(elm) {
        $('#id4FileExtAtt3').val('');
        RemoveMe(elm, 'MyDivAtt3');
    }
    function RemoveMeLocal4(elm) {
        $('#id4FileExtAtt4').val('');
        RemoveMe(elm, 'MyDivAtt4');
    }
    function RemoveMeLocal5(elm) {
        $('#id4FileExtAtt5').val('');
        RemoveMe(elm, 'MyDivAtt5');
    }

    var myModal1 = document.getElementById('MyModal1');
    var myModal2 = document.getElementById('MyModal2');
    var myModal3 = document.getElementById('MyModal3');
    var myModal4 = document.getElementById('MyModal4');
    var myModal5 = document.getElementById('MyModal5');

</script>
