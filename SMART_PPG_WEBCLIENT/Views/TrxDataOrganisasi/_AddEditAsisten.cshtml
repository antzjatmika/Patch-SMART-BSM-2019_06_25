@model MVCSmartClient01.Models.trxAsistenForm

@{
    Html.EnableClientValidation();
}

<script type="text/javascript">
    @*function OnFilesUploadComplete(s, e) {
        var imageBaseName = '@Model.ImageBaseName';
        alert(imageBaseName);
        if (imageBaseName.length > 0) {
            document.getElementById('ImageTumb').src = "../Content/DocumentImages/" + imageBaseName + ".jpg";
        }
    }*@
</script>

<div id="legend" style="margin-bottom:-10px">
    <legend style="font-size:medium" class="">Asisten Notaris</legend>
</div>

@using (Html.BeginForm("_AddEditAsisten", "TrxDataOrganisasi", FormMethod.Post))
{
    @Html.HiddenFor(model => model.IdAsisten)
    @Html.HiddenFor(model => model.IdRekanan)
    @Html.HiddenFor(model => model.IsActive)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedUser)

    <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nama Lengkap";
                settings.AssociatedControlName = "Name";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Name";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
          ).Bind(Model.Name).GetHtml()
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Handphone 1";
                settings.AssociatedControlName = "Handphone1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Handphone1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Handphone1).GetHtml()
                @Html.ValidationMessageFor(model => model.Handphone1, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Alamat";
                settings.AssociatedControlName = "Title";
            }
        ).GetHtml()
                @Html.DevExpress().Memo(
            settings =>
            {
                settings.Name = "Alamat";
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Height = 60;
                settings.Width = 250;
            }
).Bind(Model.Alamat).GetHtml()
                @Html.ValidationMessageFor(model => model.Alamat, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Handphone 2";
                settings.AssociatedControlName = "Handphone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Handphone2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Handphone2).GetHtml()
                @Html.ValidationMessageFor(model => model.Handphone2, null, new { @class = "validator" })
                <div class="clearfix"></div>
                <br/>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 1";
                settings.AssociatedControlName = "Telephone1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone1_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone1_2).GetHtml()
                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Telephone1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Telephone1).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Telephone1, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nomor KTP";
                settings.AssociatedControlName = "NomorKTP";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorKTP";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.NomorKTP).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorKTP, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 2";
                settings.AssociatedControlName = "Telephone2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-3 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone2_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone2_2).GetHtml()
                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Telephone2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Telephone2).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Telephone2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nomor NPWP";
                settings.AssociatedControlName = "NomorNPWP";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NomorNPWP";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.NomorNPWP).GetHtml()
                @Html.ValidationMessageFor(model => model.NomorNPWP, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Telepon 3";
                settings.AssociatedControlName = "Telephone3";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone3_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone3_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone3_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone3_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
            ).Bind(Model.Phone3_2).GetHtml()
                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Telephone3";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Telephone3).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Telephone3, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Email 1";
                settings.AssociatedControlName = "Email1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Email1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Format Email tidak valid !";
            }
).Bind(Model.Email1).GetHtml()
                @Html.ValidationMessageFor(model => model.Email1, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fax 1";
                settings.AssociatedControlName = "Fax1";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.MaskSettings.Mask = "9999";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax1_11";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax1_2).GetHtml()
                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Fax1).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Fax1, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Email 2";
                settings.AssociatedControlName = "Email2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Email2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RegularExpression.ValidationExpression = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";
                settings.Properties.ValidationSettings.RegularExpression.ErrorText = "Format Email tidak valid !";
            }
).Bind(Model.Email2).GetHtml()
                @Html.ValidationMessageFor(model => model.Email2, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fax 2";
                settings.AssociatedControlName = "Fax2";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax2_1";
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
            }
     ).Bind(Model.Fax2_2).GetHtml()
                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
            }
).Bind(Model.Fax2).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Fax2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
        </form>
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnUpdate";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Update";
                settings.UseSubmitBehavior = true;
                settings.ClientVisible = false;
            }
        ).GetHtml()
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxDataOrganisasi", Action = "GetByRekanan" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
        <button type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnUpdate').click();">
            <span class="glyphicon glyphicon-ok"></span>&nbsp;Simpan
        </button>
        <button type="button" class="btn btn-danger dropdown-toggle" onclick="$('#btnCancel').click();">
            <span class="glyphicon glyphicon-remove"></span>&nbsp;Batal
        </button>
    </div>
}

