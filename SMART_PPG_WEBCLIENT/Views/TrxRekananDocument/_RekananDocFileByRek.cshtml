@using System.Web.UI.WebControls
@model IEnumerable<MVCSmartClient01.Models.trxDocMandatoryFile>

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_RekananDocFileByRek" + System.Guid.NewGuid().ToString();
    settings.CallbackRouteValues = new { Controller = "TrxRekananDocument", Action = "_RekananDocFileByRek", IdDocMandatoryDetail = ViewData["IdDocMandatoryDetail"] };
    settings.Width = Unit.Percentage(100);

    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });

    settings.Columns.Add(column =>
    {
        column.Caption = "#";
        column.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<table><tr><td>" +
                Html.ActionLink("Edit", "Edit", "TrxDocMandatoryFile", new { @class = "updateLink", IdDetDocument = DataBinder.Eval(c.DataItem, "IdDocMandatoryFile") }, new { }) + "&nbsp;" +
                "</td><td>" +
                Html.ActionLink("Delete", "Delete", "TrxDocMandatoryFile", new { @class = "deleteLink", IdDetDocument = DataBinder.Eval(c.DataItem, "IdDocMandatoryFile") },
                    new { onclick = "return confirm('Apakah Anda yakin akan menghapus data ini ?')" })
                + "</td></tr></table>"
            );
        });
        column.SetHeaderTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                Html.ActionLink("New", "Create", new { IdDocument = -1 }).ToHtmlString()
            );
        });
        column.Width = 70;
    });

    settings.KeyFieldName = "IdDocMandatoryFile";

    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        column.HeaderStyle.Font.Bold = true;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };

    settings.Columns.Add(column =>
    {
        column.FieldName = "namaFile";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
}).Bind(Model).GetHtml()
