@using System.Web.UI.WebControls
@model MVCSmartClient01.Models.trxRekananDocumentMulti
@{
    var callbackRouteValues = new { Controller = "TrxRekananDocument", Action = "_RekananDocByRek" };
}

    @Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_RekananDocByRek";
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupedColumns = true;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CallbackRouteValues = new { Controller = "TrxRekananDocument", Action = "_RekananDocByRek" };
    settings.Width = Unit.Percentage(100);

    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });

    //settings.Columns.Add(column =>
    //{
    //    column.Caption = "#";
    //    column.SetDataItemTemplateContent(c =>
    //    {
    //        ViewContext.Writer.Write(
    //            "<table><tr><td>" +
    //            Html.ActionLink("Edit", "_EditRekDocument", new { @class = "updateLink", IdDocument = DataBinder.Eval(c.DataItem, "IdMandatoryDocument") }) + "&nbsp;" +
    //            "</td><td>" +
    //            Html.ActionLink("Delete", "_DeleteRekDocument", new { @class = "deleteLink", IdDocument = DataBinder.Eval(c.DataItem, "IdMandatoryDocument") },
    //                new { onclick = "return confirm('Apakah Anda yakin akan menghapus data ini ?')" })
    //            + "</td></tr></table>"
    //        );
    //    });
    //    column.SetHeaderTemplateContent(c =>
    //    {
    //        ViewContext.Writer.Write(
    //            Html.ActionLink("New", "_EditRekDocument", new { IdDocument = -1 }).ToHtmlString()
    //        );
    //    });

    //    column.Width = 70;
    //});

    settings.KeyFieldName = "IdMandatoryDocument";

    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };

    settings.Columns.Add(column =>
    {
        column.FieldName = "IdTypeOfDocument";
        column.Caption = "Tipe Dokumen";
        column.HeaderStyle.Font.Bold = true;
        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = (DevExpress.Web.ASPxEditors.ComboBoxProperties)column.PropertiesEdit;
        comboBoxProperties.ClientSideEvents.Init = "function(s, e) {s.InsertItem(0, '(ALL)', '');}";
        comboBoxProperties.DataSource = Model.TypeOfDocumentColls;
        comboBoxProperties.TextField = "NameType";
        comboBoxProperties.ValueField = "IdTypeOfDoc";
        comboBoxProperties.ValueType = typeof(int);
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TotDoc";
        column.Caption = "Total Item";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });

    settings.SettingsDetail.ShowDetailRow = true;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;

    settings.SetDetailRowTemplateContent(c =>
    {
        Html.RenderAction("_RekananDocDetailByRek", new { IdTypeOfDocument = DataBinder.Eval(c.DataItem, "IdTypeOfDocument") });
    });


}).Bind(Model.TotDocDetailByRekanan).GetHtml()
