@model MVCSmartClient01.Models.mstRekananForm

<div id="legend" style="margin-bottom:-10px">
    <legend style="font-size:medium" class="">Informasi Umum</legend>
</div>

<style>
    /*.nopadding {
   padding: 0 !important;
   margin: 0 !important;
}*/
</style>

@using (Html.BeginForm("CreateEdit", "MstRekanan", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <input type="hidden" value="@ViewBag.IsEditable" id="hiddenFlagEdit" />
    @Html.HiddenFor(model => model.IdRekanan)
    @Html.HiddenFor(model => model.IdRegion)

    <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3";
                settings.Text = "Nomor Registrasi";
                settings.AssociatedControlName = "RegistrationNumber";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.ControlStyle.CssClass = "editor";
                settings.Name = "RegistrationNumber";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
   ).Bind(Model.RegistrationNumber).GetHtml()
                @Html.ValidationMessageFor(model => model.RegistrationNumber, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Kota";
                settings.AssociatedControlName = "Kota";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Kota";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.Kota).GetHtml()
                @Html.ValidationMessageFor(model => model.Kota, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Klasifikasi";
                settings.AssociatedControlName = "ClassOfRekanan";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @switch (Model.IdTypeOfRekanan)
                {
                    case 1:
                    case 7:
                        @Html.DevExpress().ComboBoxFor(x => x.ClassOfRekanan,
                settings =>
                {
                    settings.Name = "ClassOfRekanan";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "RefId";
                    settings.Properties.TextField = "RefDescription";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    settings.ReadOnly = true;
                    settings.ControlStyle.Font.Size = 11;
                }).BindList(Model.ClassABC).GetHtml()
                        break;
                    case 2:
                    case 3:
                    case 5:
                    @Html.DevExpress().ComboBoxFor(x => x.ClassOfRekanan,
                settings =>
                {
                    settings.Name = "ClassOfRekanan";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "RefId";
                    settings.Properties.TextField = "RefDescription";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    settings.ReadOnly = true;
                    settings.ControlStyle.Font.Size = 11;
                }).BindList(Model.ClassAB).GetHtml()
                        break;
                    default:
                    @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "kosong";
                settings.AssociatedControlName = "ClassOfRekanan";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                        break;
                }
                @Html.ValidationMessageFor(model => model.ClassOfRekanan, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Kode Pos";
                settings.AssociatedControlName = "ZipCode";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "ZipCode";
                settings.Width = 250;
                settings.Properties.MaxLength = 5;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.ZipCode).GetHtml()
                @Html.ValidationMessageFor(model => model.ZipCode, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tipe Rekanan";
                settings.AssociatedControlName = "IdTypeOfRekanan";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().ComboBoxFor(x => x.IdTypeOfRekanan,
                settings =>
                {
                    settings.Name = "IdTypeOfRekanan";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "IdTypeOfRekanan";
                    settings.Properties.TextField = "Name";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    settings.ReadOnly = true;
                    settings.ControlStyle.Font.Size = 11;
                }).BindList(Model.TypeOfRekananColls).GetHtml()
                @Html.ValidationMessageFor(model => model.IdTypeOfRekanan, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Telepon 1";
                settings.AssociatedControlName = "Phone1";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ControlStyle.Font.Size = 11; 
                settings.ReadOnly = true;
            }
            ).Bind(Model.Phone1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone1_1";
                settings.ControlStyle.Font.Size = 11;
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone1_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
            ).Bind(Model.Phone1_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Phone1, null, new { @class = "validator" })

            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tipe Badan Usaha";
                settings.AssociatedControlName = "IdTypeOfBadanUsaha";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().ComboBoxFor(x => x.IdTypeOfBadanUsaha,
                settings =>
                {
                    settings.Name = "IdTypeOfBadanUsaha";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "IdTypeOfBadanUsaha";
                    settings.Properties.TextField = "Name";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    settings.ReadOnly = true;
                    settings.ControlStyle.Font.Size = 11;
                }).BindList(Model.TypeOfBadanUsahaColls).GetHtml()
                @Html.ValidationMessageFor(model => model.IdTypeOfBadanUsaha, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">

                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Telepon 2";
                settings.AssociatedControlName = "Phone2";
                settings.ControlStyle.Font.Size = 11;
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
            ).Bind(Model.Phone2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Phone2_1";
                settings.ControlStyle.Font.Size = 11;
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Phone2_2";
                settings.Width = 160;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
            ).Bind(Model.Phone2_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Phone2, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nama Rekanan";
                settings.AssociatedControlName = "Name";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Name";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.Name).GetHtml()
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Website";
                settings.AssociatedControlName = "Website";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Website";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.Website).GetHtml()
                @Html.ValidationMessageFor(model => model.Website, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Alamat";
                settings.AssociatedControlName = "Address";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().Memo(
            settings =>
            {
                settings.Name = "Address";
                settings.ControlStyle.CssClass = "editor";
                settings.Height = 60;
                settings.Width = 250;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.Address).GetHtml()
                @Html.ValidationMessageFor(model => model.Address, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Fax 1";
                settings.AssociatedControlName = "Fax1";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.MaskSettings.Mask = "9999";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
     ).Bind(Model.Fax1_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax1_11";
                settings.ControlStyle.Font.Size = 11;
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax1_2";
                settings.Width = 160;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
     ).Bind(Model.Fax1_2).GetHtml()
                @Html.ValidationMessageFor(model => model.Fax1, null, new { @class = "validator" })
                <div class="clearfix"></div>
                <br />
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Fax 2";
                settings.AssociatedControlName = "Fax2";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_1";
                settings.Width = 60;
                settings.Properties.MaxLength = 4;
                settings.ControlStyle.CssClass = "col-xs-4 nopadding";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
     ).Bind(Model.Fax2_1).GetHtml()
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-4 control-label";
                settings.Text = " - ";
                settings.Width = 25;
                settings.AssociatedControlName = "Fax2_1";
                settings.ControlStyle.Font.Size = 11;
            }
            ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Fax2_2";
                settings.Width = 165;
                settings.Properties.MaxLength = 10;
                settings.ControlStyle.CssClass = "editor";
                //settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
     ).Bind(Model.Fax2_2).GetHtml()
                @*@Html.DevExpress().TextBox(
                        settings =>
                        {
                            settings.Name = "Fax2";
                            settings.Width = 250;
                            settings.ControlStyle.CssClass = "editor";
                        }
            ).Bind(Model.Fax2).GetHtml()*@
                @Html.ValidationMessageFor(model => model.Fax2, null, new { @class = "validator" })


            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Alamat Email";
                settings.AssociatedControlName = "EmailAddress";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "EmailAddress";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.EmailAddress).GetHtml()
                @Html.ValidationMessageFor(model => model.EmailAddress, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Penerbit Rating";
                settings.AssociatedControlName = "PenerbitRating";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @*@Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "PenerbitRating";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
            }
).Bind(Model.PenerbitRating).GetHtml()*@
                @Html.DevExpress().ComboBoxFor(x => x.PenerbitRating,
                settings =>
                {
                    settings.Name = "PenerbitRating";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "RefDesc";
                    settings.Properties.TextField = "RefDesc";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                    settings.ControlStyle.Font.Size = 11;
                }).BindList(Model.LbgPemeringkatColls).GetHtml()
                @Html.ValidationMessageFor(model => model.PenerbitRating, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Kecamatan";
                settings.AssociatedControlName = "Kecamatan";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Kecamatan";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.Kecamatan).GetHtml()
                @Html.ValidationMessageFor(model => model.Kecamatan, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-2 control-label";
                settings.Text = "Nilai Rating";
                settings.AssociatedControlName = "NilaiRating";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NilaiRating";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.NilaiRating).GetHtml()
                @Html.ValidationMessageFor(model => model.NilaiRating, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Kelurahan";
                settings.AssociatedControlName = "Kelurahan";
                settings.ControlStyle.Font.Size = 11;
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Kelurahan";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = true;
                settings.ControlStyle.Font.Size = 11;
            }
).Bind(Model.Kelurahan).GetHtml()
                @Html.ValidationMessageFor(model => model.Kelurahan, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
        </form>
        <div class="form-group">
            <div class="col-sm-offset-1 col-sm-4">
                <div class="pull-left">
                    @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnUpdate";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Simpan";
                settings.UseSubmitBehavior = true;
                settings.ClientVisible = false;
            }
        ).GetHtml()
                    @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "MstRekanan", Action = "CreateEdit_Read" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-success dropdown-toggle" onclick="location.href = '@Url.Action("CreateEdit_Edit", "MstRekanan")'; return false;">
            <span class=" glyphicon glyphicon-edit"></span>&nbsp;Edit
        </button>
        @*Jika di dalam Tab maka klik Edit dalam Tab*@
        @*<button type="button" class="btn btn-success dropdown-toggle" onclick="location.href = '@Url.Action(@ViewBag.TabNavigation, "MstRekanan")'; return false;">
            <span class=" glyphicon glyphicon-edit"></span>&nbsp;Edit
        </button>*@
    </div>
}


