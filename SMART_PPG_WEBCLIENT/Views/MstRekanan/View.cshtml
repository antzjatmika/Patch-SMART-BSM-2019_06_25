@model MVCSmartClient01.Models.mstRekananForm
<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery.ui.datepicker.js"></script>
<link type="text/css" href='@Url.Content("~/Content/jquery.ui.datepicker.css")' rel="stylesheet" />
<link type="text/css" href='@Url.Content("~/Content/bootstrap.css")' rel="stylesheet" />

@{
    ViewBag.Title = "Create";
}

<div id="legend" style="margin-bottom:-10px">
    <legend style="font-size:medium" class="">Profil Rekanan</legend>
</div>
<button type="button" class="btn btn-default dropdown-toggle" onclick="$('#btnEdit').click();">
    <span class="glyphicon glyphicon-ok"></span>&nbsp;Edit
</button>
<br />
<br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <input type="hidden" value="@ViewBag.IsEditable" id="hiddenFlagEdit" />
    @Html.HiddenFor(model => model.IdRekanan)

    <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.Text = "Nama";
                settings.AssociatedControlName = "Name";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Name";
                settings.ControlStyle.CssClass = "editor";
            }
   ).Bind(Model.Name).GetHtml()
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            </div>
        </form>
    </div>
    <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            </div>
        </form>
    </div>
    <div class="row">
        <form  role="form">
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
            </div>
        </form>
    </div>

    <div class="form-horizontal">
        <h4>Identitas Rekanan</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.IdRegion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdRegion, new SelectList(Model.TypeOfRegionColls, "IdRegion", "RegionDescription"), "-- Pilih Region --")
                @Html.ValidationMessageFor(model => model.IdRegion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.ClassOfRekanan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassOfRekanan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassOfRekanan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeOfRekanan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdTypeOfRekanan, new SelectList(Model.TypeOfRekananColls, "IdTypeOfRekanan", "Name"), "-- Pilih Tipe Rekanan --")
                @Html.ValidationMessageFor(model => model.IdTypeOfRekanan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdTypeOfBadanUsaha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdTypeOfBadanUsaha, new SelectList(Model.TypeOfBadanUsahaColls, "IdTypeOfBadanUsaha", "Name"), "-- Pilih Tipe Badan Usaha --")
                @Html.ValidationMessageFor(model => model.IdTypeOfBadanUsaha, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdWilayah, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdWilayah, new SelectList(Model.WilayahColls, "IdWilayah", "Name"), "-- Pilih Wilayah --")
                @Html.ValidationMessageFor(model => model.IdWilayah, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdKecamatan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdKecamatan, new SelectList(Model.KecamatanColls, "IdKecamatan", "Name"), "-- Pilih Kecamatan --")
                @Html.ValidationMessageFor(model => model.IdKecamatan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstablishedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstablishedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstablishedDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstablishedPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstablishedPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstablishedPlace, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Fax1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fax1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Fax2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fax2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fax2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NomorKTP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomorKTP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomorKTP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NomorNPWP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomorNPWP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomorNPWP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsConsultantManagemen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsConsultantManagemen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsConsultantManagemen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input id="enableAll" class="disb" value="Edit" onclick="location.href = '@Url.Action("CreateEdit", "MstRekanan")'; return false;">
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

<script type="text/javascript">
    $(document).ready(function () {
        var h1 = document.getElementById('hiddenFlagEdit');
        if (h1.value == 'IsReadOnly')
        {
            $('input:not(.disb), textarea, table, select')
            .attr('disabled', 'disabled');
            $('div').attr('disabled', 'disabled');
        }
    });
    $(function () {
        $("#disableAll").click(function () {
            $('input:not(.disb), textarea, table, select')
            .attr('disabled', 'disabled');
            $('div').attr('disabled', 'disabled');
        });
    });
    $(function () {
        $("#enableAll").click(function () {
            $('input, textarea, table, select')
            .removeAttr('disabled');
            $('div').removeAttr('disabled');
        });
    });
</script>