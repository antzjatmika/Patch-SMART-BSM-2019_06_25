@using System.Web.UI.WebControls
@model IEnumerable<MVCSmartClient01.Models.mstReference>
@{
    var callbackRouteValues = new { Controller = "MstReference", Action = "_GetEmailConfig" };
}

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_GetEmailConfig";
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupedColumns = true;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CallbackRouteValues = new { Controller = "MstReference", Action = "_GetEmailConfig" };
    settings.Width = Unit.Percentage(100);
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "MstReference", Action = "EmailConfigUpdatePartial" };
    settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowNewButton = false;
    settings.CommandColumn.ShowDeleteButton = false;
    settings.CommandColumn.ShowEditButton = true;
    
    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });

    settings.KeyFieldName = "IdRef";

    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.HeaderStyle.Font.Bold = true;
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        column.ReadOnly = true;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };

    settings.Columns.Add(column =>
    {
        column.Caption = "Code";
        column.FieldName = "RefCode";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.Caption = "Value Description";
        column.FieldName = "RefDesc";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.Caption = "Status";
        column.FieldName = "IsActive";
        column.HeaderStyle.Font.Bold = true;
        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
}).Bind(Model).GetHtml()
