@using System.Web.UI.WebControls

@model MVCSmartClient01.Models.trxNotarisDetail

<link href="~/Content/css/font-awesome.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/SmartApps.js"></script>
<script type="text/javascript">
    function OnFilesUploadComplete(s, e) {
        var imageBaseName = '@Model.ImageBaseName';
    }

    @*function DisplayAttachment(imageType) {
        //alert('@Model.ImageBaseName');
        var fileEkstensi = '.jpg';
        switch (imageType) {
            case 'Koperasi':
                fileEkstensi = '_KOP' + '@Model.FileExtKoperasi';
                break;
            case 'PasarModal':
                fileEkstensi = '_PAS' + '@Model.FileExtPasarModal';
                break;
        }
        window.open(('../Content/DocumentImages/XYZ123456789' + fileEkstensi).replace('XYZ123456789', '@Model.ImageBaseName'), 'Koperasi', 'toolbar=no, left=100,top=25,location=no, directories=no, status=no, menubar=no, width=700, height=700');
        return false;
    }

    function buttonEdit1_ButtonClick(s, e) {
        window.open('../Content/DocumentImages/XYZ123456789_KOP.jpg'.replace('XYZ123456789', '@Model.ImageBaseName'), 'KOP', 'toolbar=no, left=100,top=25,location=no, directories=no, status=no, menubar=no, width=700, height=700');
        return false;
        src = '../Content/DocumentImages/XYZ123456789_KOP.jpg'.replace('XYZ123456789', '@Model.ImageBaseName'); height = '42'; width = '42';
    }*@
</script>
<style>
    #fileInputAtt1 {
        width: 0;
        height: 0;
    }
    #fileInputAtt2 {
        width: 0;
        height: 0;
    }
</style>

@using (Html.BeginForm("CreateEditDetail", "TrxNotaris", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.IdNotarisDetail)
    @Html.HiddenFor(model => model.ImageBaseName)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedUser)

    @Html.HiddenFor(model => model.FileExtKoperasi, new { id = "id4FileExtAtt1" })
    @Html.HiddenFor(model => model.FileExtPasarModal, new { id = "id4FileExtAtt2" })

    <div class="row" style="margin-top:10px;">
        <form role="form">
            <div class="form-group col-xs-3 col-sm-3 col-md-3 col-lg-3">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Notaris Koperasi";
                settings.AssociatedControlName = "IsNotarisKoperasi";
                settings.Width = 140;
            }
        ).GetHtml()
                @Html.DevExpress().CheckBox(
            settings =>
            {
                settings.Name = "IsNotarisKoperasi";
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = !Convert.ToBoolean(ViewData["enableTab"]);
            }
).Bind(Model.IsNotarisKoperasi).GetHtml()
            @Html.ValidationMessageFor(model => model.IsNotarisKoperasi, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-8 col-sm-8 col-md-8 col-lg-8">
            @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Upload SK Menteri Koperasi (PDF)";
                settings.AssociatedControlName = "LaporanPDF";
                settings.Width = 210;
            }
            ).GetHtml()

            <div class="col-xs-1 nopadding">
                <input type='file' id='fileInputAtt1' name='file' style='display: none'/>
                <button id='btnUploadAtt1' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen !"></button>
            </div>
            <div id="MyDivAtt1" class="col-xs-3 nopadding">
                <a href="javascript:void(0);" id="MyDivAtt1" onclick="DisplayMe1(this)">File yang diupload</a>
            </div>
            <div id="MyDelAtt1" class="col-xs-1 nopadding">
                <a href="javascript:void(0);" id="MyDelAtt1" onclick="RemoveMeLocal1(this)">X</a>
            </div>
            <div class="clearfix"></div>
                <div id="DisplayAtt1">
                    <!-- The Modal -->
                    <div id="MyModal1" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe1()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Kop" + @Model.FileExtKoperasi + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="form-group col-xs-5 col-sm-3 col-md-3 col-lg-3">

            @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Notaris Pasar Modal";
                settings.AssociatedControlName = "IsNotarisPasarModal";
                settings.Width = 140;
            }
        ).GetHtml()
                @Html.DevExpress().CheckBox(
            settings =>
            {
                settings.Name = "IsNotarisPasarModal";
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = !Convert.ToBoolean(ViewData["enableTab"]);
            }
).Bind(Model.IsNotarisPasarModal).GetHtml()
                @Html.ValidationMessageFor(model => model.IsNotarisPasarModal, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-8 col-sm-8 col-md-8 col-lg-8">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Upload STTN Pasar Modal (PDF)";
                settings.AssociatedControlName = "LaporanPDF";
                settings.Width = 210;
            }
                ).GetHtml()

                <div class="col-xs-1 nopadding">
                    <input type='file' id='fileInputAtt2' name='file' style='display: none'/>
                    <button id='btnUploadAtt2' class="fa fa-upload" data-toggle="tooltip" title="Upload dokumen !"></button>
                </div>
                <div id="MyDivAtt2" class="col-xs-3 nopadding">
                    <a href="javascript:void(0);" id="MyDivAtt2" onclick="DisplayMe2(this)">File yang diupload</a>
                </div>
                <div id="MyDelAtt2" class="col-xs-1 nopadding">
                    <a href="javascript:void(0);" id="MyDelAtt2" onclick="RemoveMeLocal2(this)">X</a>
                </div>
                <div class="clearfix"></div>
                <div id="DisplayAtt2">
                    <!-- The Modal -->
                    <div id="MyModal2" class="modal">
                        <div class="modal-content">
                            <span class="close" onclick="CloseMe2()" style=padding:0px;>&times;</span>
                            <object data=@Html.Raw("/Content/DocumentImages/" + @Model.ImageBaseName + "_Pas" + @Model.FileExtPasarModal + "?" + DateTime.Now.Ticks.ToString()) class="mdlcontain"></object>
                        </div>
                    </div>
                </div>
            </div>

            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Catatan";
                settings.AssociatedControlName = "Remark";
                settings.Width = 140;
            }
        ).GetHtml()
                @Html.DevExpress().Memo(
            settings =>
            {
                settings.Name = "Remark";
                settings.ControlStyle.CssClass = "editor";
                settings.ReadOnly = !Convert.ToBoolean(ViewData["enableTab"]);
                settings.Width = 360;
                settings.Height = 60;
            }
).Bind(Model.Remark).GetHtml()
                @Html.ValidationMessageFor(model => model.Remark, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
        </form>
        <div class="form-group">
            <div class="col-sm-offset-1 col-sm-4">
                <div class="pull-left">
                    @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnUpdate";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Simpan";
                settings.UseSubmitBehavior = true;
                settings.ClientVisible = false;
            }
        ).GetHtml()
                    @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxNotaris", Action = "CreateEdit_Read" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
                    @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnEdit";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Edit";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxNotaris", Action = "CreateEdit_Edit" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnUpdate').click();" style="visibility:@ViewData["SimpanVisi"]">
            <span class="glyphicon glyphicon-ok"></span>&nbsp;Simpan
        </button>
        <button type="button" class="btn btn-danger dropdown-toggle" onclick="$('#btnCancel').click();" style="visibility:@ViewData["SimpanVisi"]">
            <span class="glyphicon glyphicon-remove"></span>&nbsp;Batal
        </button>
        <button type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnEdit').click();" style="visibility:@ViewData["EditVisi"]">
            <span class="glyphicon glyphicon-remove"></span>&nbsp;Edit
        </button>
    </div>
}

<script>

    $(function () {
        var enableButton = "@ViewData["enableTab"]";

        if (enableButton == 'True') //enable
        {
            $("#btnUploadAtt1").attr('disabled', false);
            $("#btnUploadAtt2").attr('disabled', false);
            $("#MyDelAtt1").style.display = "block";
            $("#MyDelAtt2").style.display = "block";
        }
        else
        {
            $("#btnUploadAtt1").attr('disabled', true);
            $("#btnUploadAtt2").attr('disabled', true);
            document.getElementById("MyDelAtt1").style.display = "none";
            document.getElementById("MyDelAtt2").style.display = "none";
        }
        if ($('#id4FileExtAtt1').val() == '') {
            document.getElementById("MyDivAtt1").style.display = "none";
            document.getElementById("MyDelAtt1").style.display = "none";
            var $el = $('#fileInput1');
            $el.val('');
        }
        if ($('#id4FileExtAtt2').val() == '') {
            document.getElementById("MyDivAtt2").style.display = "none";
            document.getElementById("MyDelAtt2").style.display = "none";
            var $el = $('#fileInput2');
            $el.val('');
        }

        $('#btnUploadAtt1').click(function (e) {
            debugger;
            e.preventDefault();
            $('#fileInputAtt1').click();
        }
        );
        $('#btnUploadAtt2').click(function (e) {
            e.preventDefault();
            $('#fileInputAtt2').click();
        }
        );
    });
    ///ini yang digunakan
    $('#fileInputAtt1').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt1').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Kop', 'MyDivAtt1', 'MyDelAtt1', 1);
    });
    $('#fileInputAtt2').change(function (e) {
        file = e.target.files[0];
        var myFileExt = (file.name.match(/[^\\\/]\.([^.\\\/]+)$/) || [null]).pop();
        $('#id4FileExtAtt2').val('.' + myFileExt);
        DoUpload('@Model.ImageBaseName' + '_Pas', 'MyDivAtt2', 'MyDelAtt2', 2);
    });

    function RemoveMeLocal1(elm) {
        $('#id4FileExtAtt1').val('');
        RemoveMe(elm, 'MyDivAtt1');
    }
    function RemoveMeLocal2(elm) {
        $('#id4FileExtAtt2').val('');
        RemoveMe(elm, 'MyDivAtt2');
    }

    var myModal1 = document.getElementById('MyModal1');
    var myModal2 = document.getElementById('MyModal2');

</script>
