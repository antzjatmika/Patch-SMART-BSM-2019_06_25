@using DevExpress.Data.Filtering
@using System.Web.UI.WebControls

@model MVCSmartClient01.Models.trxDetailPekerjaanHeader

@{
    ViewBag.Title = "Index";
}

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_DetailPekerjaan";
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupedColumns = true;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    //settings.CallbackRouteValues = new { Controller = "TrxDetailPekerjaan", Action = "_GetByRekanan" };
    settings.CallbackRouteValues = new { Controller = "TrxDetailPekerjaan", Action = @ViewBag.ActionPartial };
    settings.Width = Unit.Percentage(100);
    settings.SettingsPager.PageSize = 20;
    
    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });
    if (@ViewBag.IsPcp != null && !@ViewBag.IsPcp)
    {
        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    "<table><tr><td>" +
                    Html.ActionLink("Edit", "_AddEditDetail", new { @class = "updateLink", IdData = DataBinder.Eval(c.DataItem, "IdDetailPekerjaan"), IdTypeOfRekanan = DataBinder.Eval(c.DataItem, "IdTypeOfRekanan") }) + "&nbsp;" +
                    "</td><td>" +
                    Html.ActionLink("Delete", "_Delete", new { @class = "deleteLink", IdData = DataBinder.Eval(c.DataItem, "IdDetailPekerjaan") },
                        new { onclick = "return confirm('Apakah Anda yakin akan menghapus data ini ?')" })
                    + "</td></tr></table>"
                );
            });
            column.SetHeaderTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("New", "_AddEditDetail", new { IdData = -1, IdTypeOfRekanan = 1 }).ToHtmlString()
                );
            });
            column.Width = 70;
        });
    }
    else
    {
        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    "<table><tr><td>" +
                    Html.ActionLink("Detail", "_AddEditDetail", new { @class = "updateLink", IdData = DataBinder.Eval(c.DataItem, "IdDetailPekerjaan"), IdTypeOfRekanan = DataBinder.Eval(c.DataItem, "IdTypeOfRekanan") })
                    + "</td></tr></table>"
                );
            });
            column.Width = 70;
        });
    }

    settings.KeyFieldName = "IdDetailPekerjaan";
    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.HeaderStyle.Font.Bold = true;
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };
    settings.Columns.Add(column =>
    {
        column.FieldName = "IdTypeOfRekanan";
        column.Caption = "IdTypeOfRekanan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Visible = false;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "RegistrationNumber";
        column.Caption = "No.Reg";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        if (@ViewBag.RInfoVisible == "true")
        {
            column.Visible = true;
        }
        else
        {
            column.Visible = false;
        }
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Name";
        column.Caption = "Nama Rekanan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        if (@ViewBag.RInfoVisible == "true")
        {
            column.Visible = true;
        }
        else
        {
            column.Visible = false;
        }
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DebiturName";
        column.Caption = "Nama Debitur";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DebiturLocation";
        column.Caption = "Lokasi";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "BidangUsahaDebitur";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "FeeNominal";
        column.Caption = "Fee Imbalan Jasa";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.PropertiesEdit.DisplayFormatString = "N";
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Visible = !Model.IsAsuransi;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TotalAsetPerusahaan";
        column.Caption = "Total Aset Perusahaan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.PropertiesEdit.DisplayFormatString = "N";
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Visible = !Model.IsAsuransi;
        if (@ViewBag.IdTypeOfRekanan == 1)
        {
            column.Visible = true;
        }
        else
        {
            column.Visible = false;
        }
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "JenisJasa";
        column.Caption = "Jenis Jasa Rekanan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "NomorLaporan";
        column.Caption = "No. Laporan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "PenanggungJawab";
        column.Caption = "Penandatangan Laporan (Partner)";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TanggalMulaiPekerjaan";
        column.Caption = "Tgl Terima Order";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
    
    });
    //settings.Columns.Add(column =>
    //{
    //    column.FieldName = "TanggalSelesaiPekerjaan";
    //    column.Caption = "Tgl Selesai Pekerjaan";
    //    column.HeaderStyle.Font.Bold = true;
    //    column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    //    column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    //    column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
    //    column.SortDescending();
    //});

    settings.Columns.Add(column =>
    {
        column.FieldName = "TanggalSelesaiPekerjaan";
        column.Caption = "Rentang Tgl Selesai";
        column.SortDescending();
        column.HeaderStyle.Font.Bold = true;
        column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        column.SetFilterTemplateContent(content =>
        {
            Html.DevExpress().DropDownEdit(set =>
            {
                set.Name = "dde";
                set.SetDropDownWindowTemplateContent(c =>
                {
                    Html.DevExpress().Label(s =>
                    {
                        s.Name = "L1";
                        s.Text = "From:";
                    }).Render();
                    Html.DevExpress().DateEdit(s =>
                    {
                        s.Name = "dFrom";
                        s.Date = new DateTime(1996, 1, 1);
                    }).Render();
                    Html.DevExpress().Label(s =>
                    {
                        s.Name = "L2";
                        s.Text = "To:";
                    }).Render();
                    Html.DevExpress().DateEdit(s =>
                    {
                        s.Name = "dTo";
                        s.Date = new DateTime(1997, 1, 1);
                    }).Render();
                    Html.DevExpress().Button(s =>
                    {
                        s.Name = "btn";
                        s.UseSubmitBehavior = false;
                        s.ClientSideEvents.Click = "function (s, e) { ApplyFilter( dFrom, dTo ); }";
                        s.Text = "Apply";
                    }).Render();
                });
            }).Render();
        });
    });

    settings.ProcessColumnAutoFilter = (s, e) =>
    {
        if (e.Value == "|") return;

        if (e.Column.FieldName != "TanggalSelesaiPekerjaan")
            return;
        if (e.Kind == GridViewAutoFilterEventKind.CreateCriteria)
        {
            String[] dates = e.Value.Split('|');
            DateTime dateFrom = Convert.ToDateTime(dates[0]), dateTo = Convert.ToDateTime(dates[1]);
            e.Criteria = (new OperandProperty("TanggalSelesaiPekerjaan") >= dateFrom) & (new OperandProperty("TanggalSelesaiPekerjaan") <= dateTo);
        }
    };
    settings.CustomJSProperties = (s, e) =>
    {
        MVCxGridView g = s as MVCxGridView;
        if (g.FilterExpression.Contains("TanggalSelesaiPekerjaan"))
            e.Properties["cpFilter"] = "filter";
        else
            e.Properties["cpFilter"] = null;
        e.Properties["cp_FilterOri"] = g.FilterExpression;
    };

    settings.Columns.Add(column =>
    {
        column.FieldName = "IdSegmentasi";
        column.Caption = "Unit Kerja BSM";
        column.HeaderStyle.Font.Bold = true;
        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = (DevExpress.Web.ASPxEditors.ComboBoxProperties)column.PropertiesEdit;
        comboBoxProperties.ClientSideEvents.Init = "function(s, e) {s.InsertItem(0, '(ALL)', '');}";
        //comboBoxProperties.DataSource = Model.TypeOfSegmentasi3Colls;
        comboBoxProperties.DataSource = Model.TypeOfSegmentasi5Colls;
        comboBoxProperties.ValueField = "IdSegmentasi";
        comboBoxProperties.TextField = "NamaSegmentasi";
        comboBoxProperties.ValueType = typeof(int);
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "PICBank";
        column.Caption = "PIC BSM";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Keterangan";
        column.Caption = "Catatan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Visible = false;
    });
}).Bind(Model.DetailPekerjaanColls).GetHtml()
