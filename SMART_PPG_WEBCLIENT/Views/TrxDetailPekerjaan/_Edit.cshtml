@model MVCSmartClient01.Models.trxDetailPekerjaanSingle
@{
    ViewBag.Title = "Edit";
}
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Data Pekerjaan Rekanan</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IdRekanan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdRekanan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdRekanan, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.IdRegion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdRegion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdRegion, "", new { @class = "text-danger" })
            </div>*@
            @Html.LabelFor(model => model.IdRegion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DevExpress().ComboBoxFor(x => x.IdRegion,
            settings =>
            {
                settings.ControlStyle.CssClass = "control-field";
                settings.Properties.ValueField = "IdRegion";
                settings.Properties.TextField = "RegionDescription";
                settings.Width = 200;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }).BindList(Model.TypeOfRegionColls).GetHtml()
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.IdSegmentasi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdSegmentasi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdSegmentasi, "", new { @class = "text-danger" })
            </div>*@

            @Html.LabelFor(model => model.IdSegmentasi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (Model.IdTypeOfRekanan == 2 || Model.IdTypeOfRekanan == 3)
                {
                    @Html.DevExpress().ComboBoxFor(x => x.IdSegmentasi,
            settings =>
            {
                settings.ControlStyle.CssClass = "control-field";
                settings.Properties.ValueField = "IdSegmentasi";
                settings.Properties.TextField = "NamaSegmentasi";
                settings.Width = 200;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }).BindList(Model.TypeOfSegmentasi3Colls).GetHtml()
                }
                else
                {
                    @Html.DevExpress().ComboBoxFor(x => x.IdSegmentasi,
            settings =>
            {
                settings.ControlStyle.CssClass = "control-field";
                settings.Properties.ValueField = "IdSegmentasi";
                settings.Properties.TextField = "NamaSegmentasi";
                settings.Width = 200;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }).BindList(Model.TypeOfSegmentasi5Colls).GetHtml()

                }
            </div>
        </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TahunLaporan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TahunLaporan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TahunLaporan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BulanLaporan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BulanLaporan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BulanLaporan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DebiturName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DebiturName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DebiturName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DebiturLocation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DebiturLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DebiturLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BidangUsahaDebitur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BidangUsahaDebitur, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BidangUsahaDebitur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JenisJasa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JenisJasa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.JenisJasa, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NamaPemberiPekerjaan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NamaPemberiPekerjaan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NamaPemberiPekerjaan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.UnitKerja, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitKerja, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitKerja, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TotalAsetPerusahaan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalAsetPerusahaan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalAsetPerusahaan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FeeNominal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FeeNominal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FeeNominal, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NilaiPenutupan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NilaiPenutupan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NilaiPenutupan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TanggalMulaiPekerjaan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TanggalMulaiPekerjaan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TanggalMulaiPekerjaan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TanggalSelesaiPekerjaan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TanggalSelesaiPekerjaan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TanggalSelesaiPekerjaan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NomorPolis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NomorPolis, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NomorPolis, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PICRekanan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PICRekanan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PICRekanan, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PICBank, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PICBank, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PICBank, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Keterangan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Keterangan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Keterangan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
    </div>
}
<div>
    @switch (Model.IdTypeOfRekanan)
    {
        case 1:
            @Html.ActionLink("Back to List", "RptKJPP")
            break;
        case 2:
            @Html.ActionLink("Back to List", "RptKAP")
            break;
        case 3:
            @Html.ActionLink("Back to List", "RptKonsultanM")
            break;
        case 4:
            @Html.ActionLink("Back to List", "RptAsuransiJiwa")
            break;
        case 5:
            @Html.ActionLink("Back to List", "RptAsuransiKerugian")
            break;
        case 7:
            @Html.ActionLink("Back to List", "RptBalai")
            break;
        case 8:
            @Html.ActionLink("Back to List", "RptNotaris")
            break;
    }
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
