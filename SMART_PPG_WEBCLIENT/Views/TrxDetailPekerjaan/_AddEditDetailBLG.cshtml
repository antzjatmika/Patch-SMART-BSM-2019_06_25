@model MVCSmartClient01.Models.trxDetailPekerjaanBLGSingle

@{
    Html.EnableClientValidation();
}

<div id="legend" style="margin-bottom:-10px">
    <legend style="font-size:medium" class="">Detail Pekerjaan</legend>
</div>

@using (Html.BeginForm("_AddEditDetailBLG", "TrxDetailPekerjaan", FormMethod.Post))
{
    @Html.HiddenFor(model => model.IdDetailPekerjaan)
    @Html.HiddenFor(model => model.IdRekanan)
    @Html.HiddenFor(model => model.GuidHeader)
    @Html.HiddenFor(model => model.CreatedDate)
    @Html.HiddenFor(model => model.CreatedUser)
    @Html.Hidden("DebiturLocation", "DebLoc");
    
    <div class="row">
        <form role="form">
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nama Klien";
                settings.AssociatedControlName = "DebiturName";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "DebiturName";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.DebiturName).GetHtml()
                @Html.ValidationMessageFor(model => model.DebiturName, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Fee Imbalan Jasa (Rp. Nominal Lengkap)";
                settings.AssociatedControlName = "FeeImbalanJasa";
                //settings.ClientVisible = false;
            }
        ).GetHtml()
                @Html.DevExpress().SpinEdit(
            settings =>
            {
                settings.Name = "FeeImbalanJasa";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.Properties.DisplayFormatString = "N";
                //settings.ClientVisible = false;
            }
).Bind(Model.FeeImbalanJasa).GetHtml()
                @Html.ValidationMessageFor(model => model.FeeImbalanJasa, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Jenis Property";
                settings.AssociatedControlName = "JenisProperty";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "JenisProperty";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.JenisProperty).GetHtml()
                @Html.ValidationMessageFor(model => model.JenisProperty, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tanggal Terima Order";
                settings.AssociatedControlName = "TanggalMulai";
            }
        ).GetHtml()
                @Html.DevExpress().DateEdit(
            settings =>
            {
                settings.Name = "TanggalMulai";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
            }
     ).Bind(Model.TanggalMulai).GetHtml()
                @Html.ValidationMessageFor(model => model.TanggalMulai, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Lokasi";
                settings.AssociatedControlName = "Lokasi";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Lokasi";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.Lokasi).GetHtml()
                @Html.ValidationMessageFor(model => model.Lokasi, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tanggal Selesai Pekerjaan";
                settings.AssociatedControlName = "TanggalSelesaiPekerjaan";
            }
        ).GetHtml()
                @Html.DevExpress().DateEdit(
            settings =>
            {
                settings.Name = "TanggalSelesaiPekerjaan";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.TanggalSelesaiPekerjaan).GetHtml()
                @Html.ValidationMessageFor(model => model.TanggalSelesaiPekerjaan, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Jenis Lelang";
                settings.AssociatedControlName = "JenisLelang";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "JenisLelang";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.JenisLelang).GetHtml()
                @Html.ValidationMessageFor(model => model.JenisLelang, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Bisnis Unit";
                settings.AssociatedControlName = "UnitKerjaBank";
            }
        ).GetHtml()
                @Html.DevExpress().ComboBoxFor(x => x.IdSegmentasi,
                settings =>
                {
                    settings.Name = "IdSegmentasi";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "IdSegmentasi";
                    settings.Properties.TextField = "NamaSegmentasi";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                }).BindList(Model.TypeOfSegmentasi5Colls).GetHtml()
                @Html.ValidationMessageFor(model => model.IdSegmentasi, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nomor SPK";
                settings.AssociatedControlName = "NoPerjanjian";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "NoPerjanjian";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.NoPerjanjian).GetHtml()
                @Html.ValidationMessageFor(model => model.NoPerjanjian, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Cabang BSM";
                settings.AssociatedControlName = "IdRegion"; //yang disimpan kode subRegion
            }
        ).GetHtml()
                @Html.DevExpress().ComboBoxFor(x => x.IdRegion,
                settings =>
                {
                    settings.Name = "IdRegion";
                    settings.ControlStyle.CssClass = "control-field";
                    settings.Properties.ValueField = "IdSubRegion";
                    settings.Properties.TextField = "SubDescription";
                    settings.Width = 250;
                    settings.Properties.ValidationSettings.RequiredField.IsRequired = true;

                }).BindList(Model.SubRegionColls).GetHtml()
                @Html.ValidationMessageFor(model => model.IdRegion, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Tanggal SPK";
                settings.AssociatedControlName = "TanggalPerjanjian";
            }
        ).GetHtml()
                @Html.DevExpress().DateEdit(
            settings =>
            {
                settings.Name = "TanggalPerjanjian";
                settings.Properties.DisplayFormatString = "dd/MM/yyyy";
                settings.Properties.EditFormatString = "dd/MM/yyyy";
                settings.ControlStyle.CssClass = "editor";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.TanggalPerjanjian).GetHtml()
                @Html.ValidationMessageFor(model => model.TanggalPerjanjian, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "PIC BSM";
                settings.AssociatedControlName = "PICBank";
            }
        ).GetHtml()
                @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "PICBank";
                settings.Width = 250;
                settings.ControlStyle.CssClass = "editor";
            }
).Bind(Model.PICBank).GetHtml()
                @Html.ValidationMessageFor(model => model.PICBank, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "NilaiLimitLelang";
                settings.AssociatedControlName = "NilaiLimitLelang";
            }
        ).GetHtml()
                @Html.DevExpress().SpinEdit(
            settings =>
            {
                settings.Name = "NilaiLimitLelang";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.Properties.DisplayFormatString = "N";
                settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            }
).Bind(Model.NilaiLimitLelang).GetHtml()
                @Html.ValidationMessageFor(model => model.NilaiLimitLelang, null, new { @class = "validator" })
                <br/>
                <div class="clearfix"></div>
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Nilai Transaksi";
                settings.AssociatedControlName = "NilaiTransaksi";
            }
        ).GetHtml()
                @Html.DevExpress().SpinEdit(
            settings =>
            {
                settings.Name = "NilaiTransaksi";
                settings.ControlStyle.CssClass = "editor";
                settings.Width = 250;
                settings.Properties.SpinButtons.ShowIncrementButtons = false;
                settings.Properties.DisplayFormatString = "N";
            }
).Bind(Model.NilaiTransaksi).GetHtml()
                @Html.ValidationMessageFor(model => model.NilaiTransaksi, null, new { @class = "validator" })
            </div>
            <div class="form-group col-xs-10 col-sm-6 col-md-6 col-lg-6">
                @Html.DevExpress().Label(
            settings =>
            {
                settings.ControlStyle.CssClass = "col-xs-3 control-label";
                settings.Text = "Catatan";
                settings.AssociatedControlName = "Keterangan";
            }
        ).GetHtml()
                @Html.DevExpress().Memo(
            settings =>
            {
                settings.Name = "Keterangan";
                settings.ControlStyle.CssClass = "editor";
                settings.Height = 60;
                settings.Width = 250;
            }
   ).Bind(Model.Keterangan).GetHtml()
                @Html.ValidationMessageFor(model => model.Keterangan, null, new { @class = "validator" })
            </div>
            <div class="clearfix"></div>
        </form>

        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnUpdate";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Update";
                settings.UseSubmitBehavior = true;
                settings.ClientVisible = false;
            }
        ).GetHtml()
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnCancel";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxDetailPekerjaan", Action = "GetByRekanan" }) + "'; }";
                settings.ClientVisible = false;
            }
        ).GetHtml()
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnClose";
                settings.ControlStyle.CssClass = "button";
                settings.Text = "Cancel";
                settings.ClientSideEvents.Click = "function(s, e){ document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxDetailPekerjaan", Action = "GetByTypeBLG" }) + "'; }";
                //settings.ClientSideEvents.Click = "function(s, e) { document.location='" + DevExpressHelper.GetUrl(new { Controller = "TrxDetailPekerjaan", Action = "GetByRekanan" }) + "?IdTypeOfRekanan=2' }";
                settings.ClientVisible = false;
            }
        ).GetHtml()

        @if (ViewBag.IsPcp)
        {
            <button style="visibility:@ViewBag.ButTutup" type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnClose').click();">
                <span class="glyphicon glyphicon-remove"></span>&nbsp;Tutup
            </button>
        }
        else
        {
            <button type="button" class="btn btn-success dropdown-toggle" onclick="$('#btnUpdate').click();">
                <span class="glyphicon glyphicon-ok"></span>&nbsp;Simpan
            </button>
            <button type="button" class="btn btn-danger dropdown-toggle" onclick="$('#btnCancel').click();">
                <span class="glyphicon glyphicon-remove"></span>&nbsp;Batal
            </button>
        }
    </div>
}

