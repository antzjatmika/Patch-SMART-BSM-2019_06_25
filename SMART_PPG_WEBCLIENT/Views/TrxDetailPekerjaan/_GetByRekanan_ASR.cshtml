@using System.Web.UI.WebControls
@model IEnumerable<MVCSmartClient01.Models.trxDetailPekerjaan>

@{
    ViewBag.Title = "Index";
}
<br/>
<div class="form-group">
    <label class="col-xs-2 control-label" for="textinput">Download File Template Laporan :</label>
    <div>
        @Html.ActionLink("Laporan Pekerjaan A", "DownloadTempPekerjaan", "TrxDetailPekerjaan", new { fileName = "TemplateA" }, new { @target = "_blank" })
    </div>
    <div>
        @Html.ActionLink("Laporan Pekerjaan B", "DownloadTempPekerjaan", "TrxDetailPekerjaan", new { fileName = "TemplateB" }, new { @target = "_blank" })
    </div>
</div>

@*@using (Html.BeginForm("_GetByRekanan_ASR", "TrxDetailPekerjaan", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-group" style="margin-bottom:20px">
        <label class="col-xs-3 control-label" for="textinput">Import laporan pekerjaan dari file Excel :</label>
        <div class="col-xs-2" id="upload-file-container">
            <input type="file" name="files" multiple class="btn btn-primary btn-sm" />
        </div>
        <div class="col-xs-2">
            <input type="submit" class="btn btn-primary btn-sm" value="Import Data" />
        </div>
    </div>
}*@
<br/>
@using (Html.BeginForm("_GetByRekanan_ASR", "TrxDetailPekerjaan", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="file" name="file" />
    <input type="submit" value="OK" />
}

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_DetailPekerjaan";
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupedColumns = true;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CallbackRouteValues = new { Controller = "TrxDetailPekerjaan", Action = "_GetByRekanan" };
    settings.Width = Unit.Percentage(100);
    settings.SettingsPager.PageSize = 20;
    
    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });

    settings.Columns.Add(column =>
    {
        column.Caption = "#";
        column.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<table><tr><td>" +
                Html.ActionLink("Edit", "_Edit", new { @class = "updateLink", IdData = DataBinder.Eval(c.DataItem, "IdDetailPekerjaan") }) + "&nbsp;" +
                "</td><td>" +
                Html.ActionLink("Delete", "_Delete", new { @class = "deleteLink", IdData = DataBinder.Eval(c.DataItem, "IdDetailPekerjaan") },
                    new { onclick = "return confirm('Apakah Anda yakin akan menghapus data ini ?')" })
                + "</td></tr></table>"
            );
        });

        //        column.SetDataItemTemplateContent(c =>
        //        {
        //            ViewContext.Writer.Write(
        //                    "<table><tr><td>" +
        //                Html.ActionLink(" ", "_Edit", "TrxDetailPekerjaan", new { href = "#", @class = "updateLink", title = "Update", onClick = string.Format("return pageMan.EditEntry(this,event,'{0}');", DataBinder.Eval(c.DataItem, "IdDetailPekerjaan")) }) +
        //"</td><td>" +
        //                Html.ActionLink(" ", "InlineEditingDeletePartial", "TrxDetailPekerjaan",
        //                    new { @class = "deleteLink", title = "Delete", href = string.Format("javascript:pageMan.DeleteEntry('{0}');", DataBinder.Eval(c.DataItem, "IdDetailPekerjaan")) }) + "</td></tr></table>" +
        //                                    Html.ActionLink("Delete", "Delete", new { @class = "deleteLink", id = DataBinder.Eval(c.DataItem, "IdDetailPekerjaan") },
        //                    new { onclick = "return confirm('Apakah Anda yakin akan menghapus data ini ?')" })
        //            );
        //        });
        column.SetHeaderTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                Html.ActionLink("New", "_EditMaster", new { IdData = -1 }).ToHtmlString()
            );
        });

        //column.SetHeaderTemplateContent(c =>
        //{
        //    ViewContext.Writer.Write(
        //        Html.ActionLink(" ", "_Create", "TrxDetailPekerjaan", new { @class = "newLink", title = "Add new", href = "#", onClick = "pageMan.AddNewEntry(this,event); return false;" }).ToHtmlString());
        //});
        column.Width = 70;
    });

    settings.KeyFieldName = "IdDetailPekerjaan";
    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.HeaderStyle.Font.Bold = true;
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };
    //settings.Columns.Add(column =>
    //{
    //    column.FieldName = "IdTypeOfDocument";
    //    column.Caption = "Tipe Dokumen";
    //    column.HeaderStyle.Font.Bold = true;
    //    column.ColumnType = MVCxGridViewColumnType.ComboBox;
    //    var comboBoxProperties = (DevExpress.Web.ASPxEditors.ComboBoxProperties)column.PropertiesEdit;
    //    comboBoxProperties.ClientSideEvents.Init = "function(s, e) {s.InsertItem(0, '(ALL)', '');}";
    //    comboBoxProperties.DataSource = Model.TypeOfDocumentColls;
    //    comboBoxProperties.TextField = "Name";
    //    comboBoxProperties.ValueField = "IdTypeOfDocument";
    //    comboBoxProperties.ValueType = typeof(int);
    //});
    settings.Columns.Add(column =>
    {
        column.FieldName = "TahunLaporan";
        column.Caption = "Thn";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "BulanLaporan";
        column.Caption = "Bln";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DebiturName";
        column.Caption = "Nama Debitur";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "DebiturLocation";
        column.Caption = "Lokasi Debitur";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "BidangUsahaDebitur";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "JenisJasa";
        column.Caption = "Jenis Jasa Debitur";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "NamaPemberiPekerjaan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "UnitKerja";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    //settings.Columns.Add(column =>
    //{
    //    column.FieldName = "TotalAsetPerusahaan";
    //    column.HeaderStyle.Font.Bold = true;
    //    column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    //    column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    //});
    settings.Columns.Add(column =>
    {
        column.FieldName = "FeeNominal";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "NilaiPenutupan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TanggalMulaiPekerjaan";
        column.Caption = "Tgl Mulai";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TanggalSelesaiPekerjaan";
        column.Caption = "Tgl Selesai";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
        column.SortDescending();
    });
    //settings.Columns.Add(column =>
    //{
    //    column.FieldName = "NomorPolis";
    //    column.HeaderStyle.Font.Bold = true;
    //    column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    //    column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    //});
    settings.Columns.Add(column =>
    {
        column.FieldName = "PICRekanan";
        column.Caption = "PIC";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "PICBank";
        column.Caption = "PIC Bank";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "Keterangan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Visible = false;
    });
}).Bind(Model).GetHtml()
