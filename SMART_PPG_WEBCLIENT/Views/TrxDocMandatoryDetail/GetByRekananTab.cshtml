
@using System.Web.UI.WebControls
@model MVCSmartClient01.Models.trxRekananDocumentMulti
@{
    var callbackRouteValues = new { Controller = "TrxDocMandatoryDetail", Action = "_GetByRekananTab" };
}

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_RekananDocByRek";
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupedColumns = true;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CallbackRouteValues = new { Controller = "TrxDocMandatoryDetail", Action = "_GetByRekananTab" };
    settings.Width = Unit.Percentage(70);

    settings.SetStatusBarTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "<span id=\"lblLoading\">&nbsp;</span>"
            );
    });
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });

    settings.KeyFieldName = "IdTypeOfDocument";

    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        settings.ControlStyle.Font.Size = 11;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };

    settings.Columns.Add(column =>
    {
        column.FieldName = "IdTypeOfDocument";
        column.Caption = "Tipe Dokumen";
        column.HeaderStyle.Font.Bold = true;
        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = (DevExpress.Web.ASPxEditors.ComboBoxProperties)column.PropertiesEdit;
        comboBoxProperties.ClientSideEvents.Init = "function(s, e) {s.InsertItem(0, '(ALL)', '');}";
        comboBoxProperties.DataSource = Model.TypeOfDocumentColls;
        comboBoxProperties.TextField = "NameType";
        comboBoxProperties.ValueField = "IdTypeOfDoc";
        comboBoxProperties.ValueType = typeof(int);
        settings.ControlStyle.Font.Size = 11;
        //column.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TotDoc";
        column.Caption = "Jumlah";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        settings.ControlStyle.Font.Size = 11;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "docSeq";
        column.Visible = false;
        column.Caption = "Urutan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
    });

    settings.SettingsDetail.ShowDetailRow = true;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;

    settings.SetDetailRowTemplateContent(c =>
    {
        Html.RenderAction("_RekananDocDetailByRek", "TrxRekananDocument", new { IdTypeOfDocument = DataBinder.Eval(c.DataItem, "IdTypeOfDocument") });
    });


}).Bind(Model.TotDocDetailByRekanan).GetHtml()

<script>
    function Lampiran(ImageBaseName, FileExt) {
        window.open(('../Content/DocumentImages/XYZ123456789' + FileExt).replace('XYZ123456789', ImageBaseName), 'KTP', 'toolbar=no, left=100,top=25,location=no, directories=no, status=no, menubar=no, width=700, height=700');
        return false;
    }
</script>