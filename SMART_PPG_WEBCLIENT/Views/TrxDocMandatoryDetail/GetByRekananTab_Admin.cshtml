
@using System.Web.UI.WebControls
@model MVCSmartClient01.Models.trxRekananDocumentMulti

@Html.DevExpress().GridView(
settings =>
{
    settings.Name = "_RekananDocByRek";
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowGroupedColumns = true;

    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CallbackRouteValues = new { Controller = "TrxDocMandatoryDetail", Action = "_GetByRekananTab_Admin" };

    //settings.SettingsEditing.BatchUpdateRouteValues = new { Controller = "TrxDocMandatoryDetail", Action = "BatchUpdatePartial" };
    //settings.SettingsEditing.Mode = GridViewEditingMode.Batch;

    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowEditButton = true;
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "TrxDocMandatoryDetail", Action = "UpdateLineVerified" };
    settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

    settings.Width = Unit.Percentage(70);

    //settings.SetStatusBarTemplateContent(c =>
    //{
    //    ViewContext.Writer.Write(
    //        "<span id=\"lblLoading\">&nbsp;</span>"
    //        );
    //});
    settings.SetEmptyDataRowTemplateContent(c =>
    {
        ViewContext.Writer.Write(
            "No data"
            );
    });

    settings.HtmlRowPrepared = (s, e) =>
    {
        if (e.RowType != GridViewRowType.Data) return;

        bool kelengkapan = (bool)e.GetValue("IsVerified");
        if (kelengkapan)
        {
            e.Row.BackColor = System.Drawing.Color.FromArgb(0xEDFFF3);
        }
    };


    settings.KeyFieldName = "IdTypeOfDocument";

    //DISPLAY ROW NUMBER
    settings.Columns.Add(column =>
    {
        column.FieldName = "No.";
        column.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
        column.Width = 10;
        column.Settings.AllowAutoFilter = DefaultBoolean.False;
        settings.ControlStyle.Font.Size = 11;
    });
    settings.CustomColumnDisplayText = (sender, e) =>
    {
        if (e.Column.FieldName == "No.")
        {
            e.DisplayText = (e.VisibleRowIndex + 1).ToString();
        }
    };

    settings.Columns.Add(column =>
    {
        column.FieldName = "IdTypeOfDocument";
        column.Caption = "Tipe Dokumen";
        column.HeaderStyle.Font.Bold = true;
        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = (DevExpress.Web.ASPxEditors.ComboBoxProperties)column.PropertiesEdit;
        comboBoxProperties.ClientSideEvents.Init = "function(s, e) {s.InsertItem(0, '(ALL)', '');}";
        comboBoxProperties.DataSource = Model.TypeOfDocumentColls;
        comboBoxProperties.TextField = "NameType";
        comboBoxProperties.ValueField = "IdTypeOfDoc";
        comboBoxProperties.ValueType = typeof(int);
        settings.ControlStyle.Font.Size = 11;
    });
    settings.Columns.Add(column =>
    {
        column.FieldName = "TotDoc";
        column.Caption = "Jumlah";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        settings.ControlStyle.Font.Size = 11;
        column.Width = 50;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "IsVerified";
        column.Caption = "Verifikasi";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        column.Width = 35;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "Catatan";
        column.Caption = "Catatan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.Width = 400;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "docSeq";
        column.Visible = false;
        column.Caption = "Urutan";
        column.HeaderStyle.Font.Bold = true;
        column.Settings.ShowFilterRowMenu = DevExpress.Utils.DefaultBoolean.False;
        column.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
    });

    settings.SettingsDetail.ShowDetailRow = true;
    //settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = false;
    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;

    settings.SetDetailRowTemplateContent(c =>
    {
        Html.RenderAction("_RekananDocDetailByRek", "TrxRekananDocument", new { IdTypeOfDocument = DataBinder.Eval(c.DataItem, "IdTypeOfDocument") });
        //Html.RenderAction("_RekananDocDetailByRek", "TrxRekananDocument", new { IdTypeOfDocument = 1});
    });


}).Bind(Model.TotDocDetailByRekanan).GetHtml()
